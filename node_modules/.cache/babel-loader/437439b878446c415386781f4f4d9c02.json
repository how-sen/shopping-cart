{"ast":null,"code":"var _jsxFileName = \"/Users/jose/myprojects/ecommerce-shopping-cart/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Products from './components/Products';\nimport Filter from './components/Filter';\nimport Basket from './components/Basket';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleAddToCart = (e, product) => {\n      this.setState(state => {\n        const cartItems = state.cartItems;\n        let productAlreadyInCart = false;\n        cartItems.forEach(item => {\n          console.log('item', item);\n\n          if (item.id === product.id) {\n            productAlreadyInCart = true;\n            console.log('count1', item.count);\n            item.count += 1;\n            console.log('count2', item.count);\n          }\n        });\n        console.log('productAlreadyInCart', productAlreadyInCart);\n\n        if (!productAlreadyInCart) {\n          cartItems.push({ ...product,\n            count: 1\n          });\n        }\n\n        localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n        return {\n          cartItems: cartItems\n        };\n      });\n    };\n\n    this.handleRemoveFromCart = (e, item) => {\n      this.setState(state => {\n        const cartItems = state.cartItems.filter(elm => elm.id !== item.id);\n        localStorage.setItem('cartItems', JSON.stringify(cartItems));\n        return {\n          cartItems: cartItems\n        };\n      });\n    };\n  }\n\n  // constructor(props){\n  //   super(props);\n  //   this.state = {products:[], filteredProducts:[], size: '', sort: '', cartItems: []};\n  //   this.handleChangeSort = this.handleChangeSort.bind(this);\n  //   this.handleChangeSize = this.handleChangeSize.bind(this);\n  //   this.handleAddToCart = this.handleAddToCart.bind(this);\n  //   this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this);\n  // }\n  componentDidMount() {\n    fetch(\"http://localhost:8000/products\").then(res => res.json()).then(data => this.setState({\n      products: data,\n      filteredProducts: data\n    }));\n\n    if (localStorage.getItem('cartItems')) {\n      this.setState({\n        cartItems: JSON.parse(localStorage.getItem('cartItems'))\n      });\n    }\n  } // handleChangeSort(e){\n  //   console.log('products',this.state.products)\n  //   this.setState({sort: e.target.value});\n  //   this.listProducts();\n  // }\n  // handleChangeSize(e){\n  //   this.setState({size: e.target.value});\n  //   this.listProducts();\n  // }\n  // listProducts(){\n  //   this.setState(state => {\n  //     if (state.sort !== ''){\n  //       console.log('boolean', state.sort==='lowest' )\n  //       state.products.sort((a,b) => (state.sort==='lowest')? \n  //       (a.price - b.price) \n  //       : (b.price - a.price))\n  //     } else{\n  //       state.products.sort((a,b) => (b.id - a.id));\n  //     }\n  //     if (state.size !== ''){\n  //       return {\n  //         filteredProducts: state.products.filter(a => a.availableSizes.indexOf(state.size.toUpperCase())>=0)\n  //       };\n  //     }\n  //     return {filteredProducts: state.products};\n  //   })\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, \"Ecommerce Shopping Cart Application\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Filter, {\n      size: this.state.size,\n      sort: this.state.sort,\n      handleChangeSize: this.handleChangeSize,\n      handleChangeSort: this.handleChangeSort,\n      count: this.state.filteredProducts.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Products, {\n      products: this.state.filteredProducts,\n      handleAddToCart: this.handleAddToCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Basket, {\n      cartItems: this.state.cartItems,\n      handleRemoveFromCart: this.handleRemoveFromCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jose/myprojects/ecommerce-shopping-cart/src/App.js"],"names":["React","Component","Products","Filter","Basket","Provider","store","App","handleAddToCart","e","product","setState","state","cartItems","productAlreadyInCart","forEach","item","console","log","id","count","push","localStorage","setItem","JSON","stringify","handleRemoveFromCart","filter","elm","componentDidMount","fetch","then","res","json","data","products","filteredProducts","getItem","parse","render","size","sort","handleChangeSize","handleChangeSort","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Products from './components/Products';\nimport Filter from './components/Filter';\nimport Basket from './components/Basket';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nclass App extends Component {\n  // constructor(props){\n  //   super(props);\n  //   this.state = {products:[], filteredProducts:[], size: '', sort: '', cartItems: []};\n  //   this.handleChangeSort = this.handleChangeSort.bind(this);\n  //   this.handleChangeSize = this.handleChangeSize.bind(this);\n  //   this.handleAddToCart = this.handleAddToCart.bind(this);\n  //   this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this);\n  // }\n  componentDidMount(){\n    fetch(\"http://localhost:8000/products\").then(res => res.json())\n    .then(data => this.setState({\n      products: data,\n      filteredProducts: data\n    }));\n    if(localStorage.getItem('cartItems')){\n      this.setState({cartItems: JSON.parse(localStorage.getItem('cartItems'))});\n    }\n  }\n  // handleChangeSort(e){\n  //   console.log('products',this.state.products)\n  //   this.setState({sort: e.target.value});\n  //   this.listProducts();\n  // }\n  // handleChangeSize(e){\n  //   this.setState({size: e.target.value});\n  //   this.listProducts();\n  // }\n  // listProducts(){\n  //   this.setState(state => {\n  //     if (state.sort !== ''){\n  //       console.log('boolean', state.sort==='lowest' )\n  //       state.products.sort((a,b) => (state.sort==='lowest')? \n  //       (a.price - b.price) \n  //       : (b.price - a.price))\n  //     } else{\n  //       state.products.sort((a,b) => (b.id - a.id));\n  //     }\n  //     if (state.size !== ''){\n  //       return {\n  //         filteredProducts: state.products.filter(a => a.availableSizes.indexOf(state.size.toUpperCase())>=0)\n  //       };\n  //     }\n  //     return {filteredProducts: state.products};\n  //   })\n  // }\n  handleAddToCart = (e, product) => {\n    this.setState(state => {\n      const cartItems = state.cartItems;\n      let productAlreadyInCart = false;\n\n      cartItems.forEach(item => {\n        console.log('item',item)\n        if(item.id === product.id){\n          productAlreadyInCart = true;\n          console.log('count1', item.count)\n          item.count += 1;\n          console.log('count2', item.count)\n        }\n      });\n      console.log('productAlreadyInCart', productAlreadyInCart)\n      if (!productAlreadyInCart){\n        cartItems.push({ ...product, count: 1 });\n      }\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n      return { cartItems: cartItems };\n    })\n  }\n  handleRemoveFromCart = (e, item) => {\n    this.setState(state => {\n      const cartItems = state.cartItems.filter(elm => elm.id !== item.id);\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n      return { cartItems: cartItems };\n    });\n  }\n  render() {\n    return(\n      <Provider store={store}>\n        <div className=\"Container\">\n          <h1>Ecommerce Shopping Cart Application</h1>\n          <hr/>\n          <div className=\"row\">\n            <div className=\"col-md-8\">\n              <Filter \n                size={this.state.size} \n                sort={this.state.sort} \n                handleChangeSize={this.handleChangeSize} \n                handleChangeSort={this.handleChangeSort} \n                count={this.state.filteredProducts.length} \n              />\n              <hr/>\n              <Products products={this.state.filteredProducts} handleAddToCart={this.handleAddToCart}/>\n            </div>\n            <div className=\"col-md-4\">\n              <Basket cartItems = {this.state.cartItems} handleRemoveFromCart={this.handleRemoveFromCart}/>\n            </div>\n          </div>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}